{
	"info": {
		"_postman_id": "077df41a-739b-4164-9519-a254948ebcd0",
		"name": "express_js_mongo_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0) Ping",
			"item": [
				{
					"name": "Success-Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Ping\", () => {\r",
									"  pm.expect(responseJson.Ping).to.eql(\"Pong\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:3000/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3000",
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1) Products",
			"item": [
				{
					"name": "1-1) List",
					"item": [
						{
							"name": "Success-Products-List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"const responseJson = pm.response.json();\r",
											"pm.test(\"output as expected\", () => {\r",
											"for (let index in responseJson) {\r",
											"  let product = responseJson[index];\r",
											"  //console.log(product);\r",
											"        pm.expect(typeof(product[\"_id\"])).to.eql(typeof(\"str\"));\r",
											"        pm.expect(typeof(product[\"name\"])).to.eql(typeof(\"txt\"));\r",
											"        pm.expect(typeof(product[\"description\"])).to.eql(typeof(\"str\"));\r",
											"        pm.expect(typeof(product[\"__v\"])).to.eql(typeof(1));\r",
											"}\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:3000/products",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "3000",
									"path": [
										"products"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "1-2) Post",
					"item": [
						{
							"name": "Success-Product-Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"const responseJson = pm.response.json();\r",
											"pm.test(\"output as expected\", () => {\r",
											"let product = responseJson;\r",
											"    //console.log(product);\r",
											"    pm.expect(typeof(product[\"_id\"])).to.eql(typeof(\"str\"));\r",
											"    pm.expect(typeof(product[\"name\"])).to.eql(typeof(\"txt\"));\r",
											"    pm.expect(typeof(product[\"description\"])).to.eql(typeof(\"str\"));\r",
											"    pm.expect(typeof(product[\"__v\"])).to.eql(typeof(1));\r",
											"\r",
											"    pm.environment.set(\"created_product_1\", product[\"_id\"]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"My Product\",\r\n    \"price\": 30,\r\n    \"description\": \"This is my product\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:3000/products",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "3000",
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail-Product-Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"const responseJson = pm.response.json();\r",
											"pm.test(\"output as expected\", () => {\r",
											"let product = responseJson;\r",
											"    //console.log(product);\r",
											"    pm.expect((product[\"price\"])).to.eql((\"Path `price` is required.\"));\r",
											"    pm.expect((product[\"name\"])).to.eql((\"Path `name` is required.\"));\r",
											"    pm.expect((product[\"description\"])).to.eql((\"Path `description` is required.\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:3000/products",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "3000",
									"path": [
										"products"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}